1.ubuntu（linux）命令行模式下如何挂载U盘

图形化界面进入命令模式 Ctrl+Alt+F1
命令模式进入图形化界面 Ctrl+Alt+F7

1.日历组件
https://github.com/jinzhe/vue-calendar
2.虚拟键盘
https://github.com/icebob/vue-touch-keyboard

sublime设置
SublimeCodeIntel（代码提示和补全插件）
FileDiffs（文件比较）
Doc​Blockr: 代码块注释
javascript sinppets（以模板方式编程）
// 设置tab的大小为2
"tab_size": 2,
// 使用空格代替tab
"translate_tabs_to_spaces": true,
// 添加行宽标尺
"rulers": [80, 100],
// 显示空白字符
"draw_white_space": "all",
// 保存时自动去除行末空白
"trim_trailing_white_space_on_save": true,
// 保存时自动增加文件末尾换行
"ensure_newline_at_eof_on_save": true,

http://es6.ruanyifeng.com/#docs/function



npm 相关
npm init初始化
npm install的安装过程： 去寻找package.json文件，向 registry 查询dependencies和devDependencies中定义的模块的压缩包的网址，下载压缩包存放到~/.npm目录，然后解压到当前目录的node_modules中
npm install --production，只是安装package.json的【dependencies】中的模块

在开发过程中需要安装模块：npm install <packageName>,不会写入package.json文件中
安装指定版本：npm install node-sass@4.0.0
npm install node-sass@4.0.0 --save，会写入package.json的dependencies中
npm install node-sass@4.0.0 --save-dev，会写入package.json的devDependencies中

安装到全局：npm install --global babel-cli
使用原则：运行时需要用到的包使用--save，否则使用--save-dev。
dependencies中的模块是：生产环境中的依赖
devDependencies中的模块是：开发时用的，比如grunt-contrib-uglify, 我们用它来混淆js文件，它们不会被部署到生成环境，以及其他方便我们开发的工具，比如angular, vue, sass等都只需要安装到devDependencies。



1.devDependencies和dependencies的区别
--save-dev
--save

使用 --save-dev 安装的 插件，被写入到 devDependencies 对象里面去，而使用 --save 安装的插件，则被写入到 dependencies 对象里面去。

devDependencies  里面的插件只用于【开发环境】，不用于生产环境，而 dependencies  是需要发布到【生产环境的】。
2.代码库
# install dependencies
3.未满足的依赖问题
peerDependencies（前置依赖定义）
问题浮现：
在项目的package中定义
"dependencies": {
    "element-ui": "^1.2.8"
}
npm install
出现提示UNMET DEPENDENCY vue@^2.1.6（未满足的依赖）
因为element-ui中定义了peerDependencies
"peerDependencies": {
    "vue": "^2.1.6"
}
3.组件版本修饰符
npm install element-ui@1.2.8
然后会在package的dependencies字段中插入"element-ui": "^1.2.8"
1.2.8是主版本号 + 次版本号 + 修订号
前边的^表示主版本号不变，～表示主版本号和次版本号都不变
所以这个项目被使用到，npm install的时候就会下载element-ui包，面对^的时候会'尽可能新的且能够保持兼容性的版本

facebookincubator/create-react-app

https://ant.design/index-cn

gulp-mock

https://github.com/sosout/react-antd


demo
https://github.com/kenberkeley/vue-demo
https://github.com/kenberkeley/react-demo

兼容性
https://segmentfault.com/a/1190000005794242#articleHeader9


这两个
https://github.com/zuiidea/antd-admin
https://github.com/sosout/react-antd


拷贝数组时使用slice
var items = [1,2,3,4];
var itemsCopy = items.slice();
console.log(itemsCopy)
itemsCopy[0] = 5;
console.log(itemsCopy) // [5,2,3,4]
console.log(items) // [1,2,3,4]


使用slice将类数组的对象转成数组
function trigger() {
  var args = [].slice.apply(arguments);
}

parseInt(inputValue, 10);

利用promise的deferred对象解决延迟注册问题。
var dtd = $.Deferred(); // 新建一个deferred对象
var wait = function(dtd){
　　　 var tasks = function(){
　　　　　　alert("执行完毕！");
　　　　　　dtd.resolve(); // 改变deferred对象的执行状态
    };
　　　　setTimeout(tasks,5000);
　　　　return dtd;
};

基础类型， 相当于传值：string,number,boolean,null,undefined
复杂类型， 相当于引用：object,array,function

注释
// FIXME
// TODO

ECMAScript 5兼容性
尽量采用ES5方法，特别数组map、filter、forEach方法简化日常开发。在老式IE浏览器中引入ES5-shim。或者也可以考虑引入underscore、lodash 常用辅助库. 

js规范
http://www.cnblogs.com/whitewolf/p/4491447.html


cross-env

react小书
https://github.com/huzidaha/react-naive-book

React.js 是一个帮助你构建页面 UI 的库
React 的组件就相当于 MVC 里面的 View
组件化-可以复用
props组件的配置参数，写在组件的标签上

编译 Babel
状态管理 Redux
单页面应用 React-router

JSX 就是 JavaScript 里面的对象
组件树-由多个组件组成
this.setState（对象或函数）
JSX 的 {} 内可以嵌入任何表达式，{{}} 就是在 {} 内部用对象字面量返回一个对象而已
默认配置 static defaultProps
setState 会导致组件的重新渲染。
（） => {}

以前一个组件是通过继承 Component 来构建，一个子类就是一个组件。而用函数式的组件编写方式是一个函数就是一个组件
函数式组件就是一种只能接受 props 和提供 render 方法的类组件。
for (let user of users) {}
users.map((user) => {return (<div>{user.name}</div>)})
ref属性可获取已经挂载的元素的DOM节点
props.children
PropTypes 和组件参数验证


https://github.com/sentsin
http://layer.layui.com/mobile/


SPA单页面应用
1.mock中req.body是undefined
删除package中的 "roadhog": "^0.6.0-beta.6"
并且全局安装 npm i -g roadhog
2.location.origin在IE低版本中是undefined
做兼容性处理
3.browserHistory与hashHistory的使用
http://blog.csdn.net/hyy1115/article/details/53021807
http://mirror.am0200.com/#15
4.未有实现
在生产环境中，首先搭建一个服务器，把它映射到dist目录

5.vh
相对于视口的高度。视口被均分为100单位的vh
100vh就是视口的高度
IE9以上就支持
6.flex布局即是弹性布局
兼容IE10以上
display: flex; justify-content: space-between; 两栏布局
7.httprequester的post使用
URL：填写
选择方式： post
content Type：application/json
Content 填写(注意使用双引号)
{"username": "admin", "password": "admin"}
最后一步操作：submit


